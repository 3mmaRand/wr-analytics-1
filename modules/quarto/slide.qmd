---
title: "Quarto for reproducible reporting"
author: "Emma Rand"
format: 
  revealjs:
    theme: simple
    footer: "ðŸ”— [Module overview](https://3mmarand.github.io/wr-analytics-1/modules/overview.html)"
    slide-number: true
    chalkboard: true
    code-link: true
    code-line-numbers: false
execute:
  eval: false
bibliography: ../../references.bib
editor: 
  markdown: 
    wrap: 72
---

# Overview

## Aims

To introduce you to Quarto for creating reproducible reports in a
variety of output formats. You will also get more practice organising
analyses and importing, summarising and plotting data.

ðŸŽ¬ Instruction to do something


## Learning Outcomes

The successful student will be able to:

::: {style="font-size: 80%"}
-   explain what Quarto and markdown are

-   appreciate the role of the YAML header

-   set default code chunk behaviour and that for individual chunks

-   use headings, simple text formatting and special characters

-   add citations and references

-   use inline code to report results in text

-   create automatically numbered tables and figures and cross reference
    them in text
:::

## Current process

::: incremental
-   What is your process for getting your summary data, statistical
    results, tables and figures in to a report / paper?

-   What do you do when you get additional data that increases your
    sample sizes?

-   How easy is it to reorder your figures and tables?

-   What do you do if you formatted for one journal and now have to
    submit to another?
:::

## Current process

::: incremental
-   Typically people analyse, plot and write up in different programs.

-   Graphs are saved to files and inserted into the final report.

-   Reordering figures, tables and equations means updating everywhere
    they are cross-referenced.

-   If the data change, the author must repeat the entire process to
    update the report.

-   Manual labour ..... error prone
:::

# What is Quarto?

## What is Quarto?

::: incremental
-   An open-source scientific and technical publishing system that
    allows you to create dynamic reproducible reports in a variety of
    output formats.

-   Next generation RMarkdown. Many new features, greater
    standardisation and more flexibility.

-   Mutli-language Python, R, Julia, and Observable.

-   Include auto-numbered and cross-referencable equations, figures and
    tables

-   Integrates with Zotero
:::

# Demo!

## Key points from the demo

-   Quarto mixes text and code to create dynamic reports

-   The YAML header sets the default behaviour for the document and is
    between `---` at the top of the document

-   R Code chunks are between ```` ```{r} ```` and ```` ``` ```` and
    chunk options determine how/whether they run whether code/output is
    included in the rendered document
    
-   You can run code chunk interactively or through rendering

-   Comments: `|#`, `#` in chunk options, `<!-- in text -->` but use
    Ctrl+Shift+C

# Markdown foundations

## What is Markdown?

Markdown is a plain text format that is designed to be easy to write,
and, even more importantly, easy to read

## Text Formatting

+------------------------------+-------------------------------------+
| Markdown Syntax              | Output                              |
+==============================+=====================================+
| ``` markdown                 | *italics*, **bold**                 |
| *italics*,**bold**           |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+
| ``` markdown                 | ***bold italics***                  |
| ***bold italics **           |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+
| ``` markdown                 | superscript^2^                      |
| superscript^2^               |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+
| ``` markdown                 | subscript~2~                        |
| subscript~2~                 |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+
| ``` markdown                 | ~~strikethrough~~                   |
| ~~strikethrough~~            |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+
| ``` markdown                 | `verbatim code`                     |
| `verbatim code`              |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+

## Headings

+-------------------------+------------------------------------------+
| Markdown Syntax         | Output                                   |
+=========================+==========================================+
| ``` markdown            | # Header 1                               |
| # Header 1              |                                          |
| ```                     |                                          |
+-------------------------+------------------------------------------+
| ``` markdown            | ## Header 2                              |
| ## Header 2             |                                          |
| ```                     |                                          |
+-------------------------+------------------------------------------+
| ``` markdown            | ### Header 3                             |
| ### Header 3            |                                          |
| ```                     |                                          |
+-------------------------+------------------------------------------+
| ``` markdown            | #### Header 4                            |
| #### Header 4           |                                          |
| ```                     |                                          |
+-------------------------+------------------------------------------+

## Links & Images

+------------------------------+-------------------------------------+
| Markdown Syntax              | Output                              |
+==============================+=====================================+
| ``` markdown                 | [Quarto](https://quarto.org)        |
| [Quarto](https://quarto.org) |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+
| ``` markdown                 | ![](images/chaff.jpg){width="150"}  |
| ![Caption](images/chaff.jpg) |                                     |
| ```                          |                                     |
+------------------------------+-------------------------------------+

## Lists

+-------------------------------+---------------------------------+
| Markdown Syntax               | Output                          |
+===============================+=================================+
| ``` markdown                  | -   unordered list              |
| * unordered list              |     -   sub-item 1              |
|     + sub-item 1              |     -   sub-item 2              |
|     + sub-item 2              |                                 |
| ```                           |                                 |
+-------------------------------+---------------------------------+

## Lists

+--------------------------------+--------------------------------+
| Markdown Syntax                | Output                         |
+================================+================================+
| ``` markdown                   | 1.  ordered list               |
| 1. ordered list                | 2.  item 2                     |
| 2. item 2                      |     i)  sub-item 1             |
|     i) sub-item 1              |                                |
| ```                            |                                |
+--------------------------------+--------------------------------+

## Equations

Use `$` delimiters for inline math and `$$` delimiters for display math.
For example:

+--------------------------------+--------------------------------+
| Markdown Syntax                | Output                         |
+================================+================================+
| ``` markdown                   | inline math: $E=mc^{2}$        |
| inline math: $E = mc^{2}$      |                                |
| ```                            |                                |
+--------------------------------+--------------------------------+
| ``` markdown                   | display math:                  |
| display math:                  |                                |
|                                | $$E = mc^{2}$$                 |
| $$E = mc^{2}$$                 |                                |
| ```                            |                                |
+--------------------------------+--------------------------------+

## Divs

"Divs" are used to group content together and apply styling to that
content.

For example, callouts

``` markdown
:::{.callout-note}
Note that there are five types of callouts, including: 
`note`, `tip`, `warning`, `caution`, and `important`.
:::
```

::: callout-note
Note that there are five types of callouts, including: `note`, `tip`,
`warning`, `caution`, and `important`.
:::

## Div

For example:

``` markdown
::: {style="font-size: 80%"}
This content is smaller
:::
```

::: {style="font-size: 80%"}
This content is smaller
:::

# Your turn!

## Start a new project

ðŸŽ¬ File | New Project | New Directory | Quarto Project

-   Browse to an appropriate place and give your project a name.

-   I used `wr-chaff`

-   Choose Engine: Knitr

-   Turn visual markdown editor off (for now)

## Start a new project

ðŸŽ¬ Change some RStudio settings. Tools | Global Options

-   General:

    -   Turn off the three "Restore ...." options

    -   Turn "Save workspace to .RData on exit" to Never

-   R Markdown:

    -   Turn "Show output preview in:" to to Viewer pane



## Your project contains

-    `wr-chaff.RProj` - what makes the folder an RStudio project

-   `_quarto.yml` - the configuration file 

-   `wr-chaff.md` - the main document containing some template text

. . . 

ðŸŽ¬ Hit Render (Ctrl-Shift-K)

Note that` wr-chaff.html` is created and opened in the Viewer pane

(may need to set in Global options to open in Viewer pane)


## Edit the YAML header

ðŸŽ¬ Add your name, and a title. Also add the engine and format 

``` yml
---
title: "The difference in mass between subspecies of common chaffinch."
author: "Emma Rand"
engine: knitr
format:
  html
---
```

## Add some content

ðŸŽ¬ Add a code chunk (Ctrl-Shift-I) for a simple graph.


```{r}
#| echo: fenced
hist(rnorm(100))
```

ðŸŽ¬ Hit Render (Ctrl-Shift-K)




## Edit the YAML header

ðŸŽ¬ Set some default code chunk options. I recommend these for reports


``` yml
---
title: "The difference in mass between subspecies of common chaffinch."
author: "Emma Rand"
engine: knitr
format:
  html
execute:
  echo: false
  include: true
  error: false
  message: false
  warning: false

---
```
ðŸŽ¬ Hit Render (Ctrl-Shift-K)

## Code chunk options

-   `echo: false`  code will not be included in output
-   `include: true` output will be included
-   `error: false` halt render if a code error occurs
-   `message: false` messages and warnings will not be included
-   `warning: false`

ðŸŽ¬ Experiment with change the options and re-rendering. Try misspelling
    `rnorm` to see the error option in action.

# Content


## Content

ðŸŽ¬ Delete everything except the YAML header.

ðŸŽ¬ Add headings for: Introduction, Methods, Results, Discussion, 
   and  References

ðŸŽ¬ Add a code chunk for package loading


```{r}
#| echo: fenced
#| label: load-packages
library(tidyverse)
```

`#| label: load-packages` is a code chunk label. These are useful (here)
and essential (later) for cross-referencing.

## Introduction

ðŸŽ¬ Add this test to the Introduction


::: {style="font-size: 80%"}
A number of subspecies of the common chaffinch, Fringilla
coelebs, have been described based principally on the differences in the pattern and colour of the adult male plumage. Two of groups of these
subspecies are the "coelebs group"  that occurs in Europe
and Asia and the "canariensis group" that occurs on
the Canary Islands.
:::

. . .

ðŸŽ¬ Make the species name italic

. . .


ðŸŽ¬ Make "common chaffinch" a link to  https://en.wikipedia.org/wiki/Common_chaffinch


## Add data import

ðŸŽ¬ Make a folder called `data-raw`



ðŸŽ¬ Save [chaff.txt](data-raw/chaff.txt) to `data-raw`

. . .

ðŸŽ¬ Run chunks interactively


ðŸŽ¬ Render


## Add data summary

ðŸŽ¬ Add a code chunk with:


```{r}
#| echo: fenced
#| label: data-summary
chaff_summary <- chaff |> 
  group_by(subspecies) |>  
  summarise(mean = mean(mass, na.rm = TRUE),
            sd = sd(mass, na.rm = TRUE),
            n = length(mass),
            se = sd / sqrt(n))
```

## Add information for methods

ðŸŽ¬ Add this test to the Introduction

::: {style="font-size: 80%"}

We randomly sampled 20 *F. c. coelebs* males and
20 *F. c. palmae* males and determined their mass with
spring scales. Analysis was carried out with R and tidyverse packages.
:::

. . . 

It would be good

## Extract summary information

ðŸŽ¬ Add a code chunk with:

```{r}
#| echo: fenced
#| label: extract-summary
# extract values for inline reporting

# sample sizes
n_coelebs <- chaff_summary |> 
  filter(subspecies == "coelebs") |> 
  pull(n)

n_canariensis <- chaff_summary |> 
  filter(subspecies == "canariensis") |> 
  pull(n)
```


## Inline code: reproducible reporting

-   Inline code is how you include a variable value, like a sample 
    size, mean or statistical result, in a section of text.

-   In fact, any code output can be inserted directly into the text 
    of a .qmd file using inline code.

. . . 

Inline code goes between ``` `r and ` ``` .

For example by writing:

The squareroot of 2 is ```  `r sqrt(2) ` ```

you will get:

The squareroot of 2 is `r sqrt(2)


## Inline code: reproducible reporting

ðŸŽ¬ Replace the sample sizes in the Methods text with inline code

``` markdown
We randomly sampled `r n_coelebs`  *F. c. coelebs* males
```



## A figure

ðŸŽ¬ Add a code chunk with:

```{r}
#| echo: fenced
#| label: fig-chaff
ggplot() +
  geom_point(data = chaff, aes(x = subspecies, y = mass),
             position = position_jitter(width = 0.1, height = 0),
             colour = "gray50") +
  geom_errorbar(data = chaff_summary, 
                aes(x = subspecies, ymin = mean - se, ymax = mean + se),
                width = 0.3) +
  geom_errorbar(data = chaff_summary, 
                aes(x = subspecies, ymin = mean, ymax = mean),
                width = 0.2) +
  scale_y_continuous(name = "Mass (g)", 
                     limits = c(0, 30), 
                     expand = c(0, 0)) +
  scale_x_discrete(name = "Subspecies", 
                   labels = c("Canariensis", "Coelebs")) +
  theme_classic()
```

## A figure legend


## Cross referencing


## Two panel figure

## Change the order of the figures


## A table



## Citations


##


##

##


##