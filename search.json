[
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Prerequisites",
    "section": "",
    "text": "There are Windows PCs at the venue and you are not required to bring your own machine. Participants from outside of York will be provided with a temporary IT account. However, if you prefer to work on your own machine please follow the instructions below.\n\n\nLaptops should have the following installed prior to attending and attempting the materials.\n\nR version 4.4.1 or higher:https://cloud.r-project.org/\nRStudio Version: 2024.12.1+563 or higher: https://posit.co/download/rstudio-desktop/\nThese R packages from CRAN: {tidyverse} {devtools} Once you have installed R and RStudio, start RStudio up and go to the Packages tab in the bottom right pane; click Install and type the name of the package you want to install in the box that appears. Then wait until you get the cursor (&gt;) back in the console window.\nTinyTeX Once you have installed R and RStudio, start RStudio up and go to the Terminal (lower left, behind the console) and type: quarto install tinytex and press enter."
  },
  {
    "objectID": "prerequisites.html#computing-requirements",
    "href": "prerequisites.html#computing-requirements",
    "title": "Prerequisites",
    "section": "",
    "text": "Laptops should have the following installed prior to attending and attempting the materials.\n\nR version 4.4.1 or higher:https://cloud.r-project.org/\nRStudio Version: 2024.12.1+563 or higher: https://posit.co/download/rstudio-desktop/\nThese R packages from CRAN: {tidyverse} {devtools} Once you have installed R and RStudio, start RStudio up and go to the Packages tab in the bottom right pane; click Install and type the name of the package you want to install in the box that appears. Then wait until you get the cursor (&gt;) back in the console window.\nTinyTeX Once you have installed R and RStudio, start RStudio up and go to the Terminal (lower left, behind the console) and type: quarto install tinytex and press enter."
  },
  {
    "objectID": "materials/principles-of-reproducibility.html",
    "href": "materials/principles-of-reproducibility.html",
    "title": "Introduction and Principles of reproducibility",
    "section": "",
    "text": "Chosen topics are: foundational, widely applicable, and transferable conceptually.\nIt is\n\n‚úÖ An introduction to R for those without previous experience\n‚úÖ About using RStudio Projects and good practice for code and project documentation and organisation\n‚úÖ An introduction to the tidyverse\n\nIt is not\n\n‚ùå An introduction to statistics\n‚ùå Magic\n\nAfter this workshop the successful learner will be able to:\n\nExplain the rationale for scripting analysis\nFind their way around the RStudio windows\nCreate and plot data using ggplot\nKnow how to load packages\nUnderstand what is meant by the working directory, absolute and relative paths and be able to apply these concepts to data import\nSummarise data in a single group or in multiple groups\nDevelop highly organised analyses including well-commented scripts that can be understood by future you and others"
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#programme-overview",
    "href": "materials/principles-of-reproducibility.html#programme-overview",
    "title": "Introduction and Principles of reproducibility",
    "section": "",
    "text": "Chosen topics are: foundational, widely applicable, and transferable conceptually.\nIt is\n\n‚úÖ An introduction to R for those without previous experience\n‚úÖ About using RStudio Projects and good practice for code and project documentation and organisation\n‚úÖ An introduction to the tidyverse\n\nIt is not\n\n‚ùå An introduction to statistics\n‚ùå Magic\n\nAfter this workshop the successful learner will be able to:\n\nExplain the rationale for scripting analysis\nFind their way around the RStudio windows\nCreate and plot data using ggplot\nKnow how to load packages\nUnderstand what is meant by the working directory, absolute and relative paths and be able to apply these concepts to data import\nSummarise data in a single group or in multiple groups\nDevelop highly organised analyses including well-commented scripts that can be understood by future you and others"
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#what-is-reproducibility",
    "href": "materials/principles-of-reproducibility.html#what-is-reproducibility",
    "title": "Introduction and Principles of reproducibility",
    "section": "What is reproducibility?",
    "text": "What is reproducibility?\n\n\nThe Turing Way‚Äôs definitions of reproducible research\n\nReproducible: Same data + same analysis = identical results\n‚Äú‚Ä¶obtaining consistent results using the same input data; computational steps, methods, and code; and conditions of analysis. This definition is synonymous with‚Äùcomputational reproducibility‚Äù (National Academies of Sciences et al. 2019). This is what we are concentrating on in the Supporting Information.\n\nReplicable: Different data + same analysis = qualitatively similar results. The work is not dependent on the specificities of the data.\nRobust: Same data + different analysis = qualitatively similar or identical results. The work is not dependent on the specificities of the analysis.\nGeneralisable: Different data + different analysis = qualitatively similar results and same conclusions."
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#why-does-reproducibility-matter",
    "href": "materials/principles-of-reproducibility.html#why-does-reproducibility-matter",
    "title": "Introduction and Principles of reproducibility",
    "section": "Why does reproducibility matter?",
    "text": "Why does reproducibility matter?\n\nMany high profile cases of work which did not reproduce e.g.¬†Anil Potti unravelled by Baggerly and Coombes (2009)\nFive selfish reasons to work reproducibly (Markowetz 2015). Alternatively, see the very entertaining talk\nWill become standard in Science and publishing e.g OECD Global Science Forum Building digital workforce capacity and skills for data-intensive science (OECD Global Science Forum 2020)"
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#how-to-achieve-reproducibility",
    "href": "materials/principles-of-reproducibility.html#how-to-achieve-reproducibility",
    "title": "Introduction and Principles of reproducibility",
    "section": "How to achieve reproducibility",
    "text": "How to achieve reproducibility\n\nReproducibility is a continuum. Some is better than none!\nScript everything\nOrganisation: Project-oriented workflows with file and folder structure, naming things\nCode: follow a consistent style, organise into sections and scripts (be modular), Code algorithmically\nDocumentation: Readme files, code comments, metadata,\nMore advanced: version, control, continuous integration and testing"
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#rationale-for-scripting",
    "href": "materials/principles-of-reproducibility.html#rationale-for-scripting",
    "title": "Introduction and Principles of reproducibility",
    "section": "Rationale for scripting",
    "text": "Rationale for scripting\n\nScience is the generation of ideas, designing work to test them and reporting the results.\nWe ensure laboratory and field work is replicable, robust and generalisable by planning and recording in lab books and using standard protocols. Repeating results is still hard.\nWorkflows for computational projects, and the data analysis and reporting of other work can, and should, be 100% reproducible!\nScripting is the way to achieve this."
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#project-oriented-workflow",
    "href": "materials/principles-of-reproducibility.html#project-oriented-workflow",
    "title": "Introduction and Principles of reproducibility",
    "section": "Project-oriented workflow",
    "text": "Project-oriented workflow\n\nuse folders to organise your work\nyou are aiming for structured, systematic and repeatable.\ninputs and outputs should be clearly identifiable from structure and/or naming"
  },
  {
    "objectID": "materials/principles-of-reproducibility.html#further-reading",
    "href": "materials/principles-of-reproducibility.html#further-reading",
    "title": "Introduction and Principles of reproducibility",
    "section": "Further reading",
    "text": "Further reading\n\nData Organization in Spreadsheets (Broman and Woo 2018)\n\nTen simple rules for reproducible computational research (Sandve et al. 2013)\n\nBest practices for scientific computing (Wilson et al. 2014)\n\nGood enough practices in scientific computing (Wilson et al. 2017)\n\nExcuse Me, Do You Have a Moment to Talk About Version Control? (Bryan 2018)\n\n\nPages made with R (R Core Team 2025), Quarto (Allaire et al. 2024), knitr (Xie 2024, 2015, 2014), kableExtra (Zhu 2024)"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html",
    "href": "materials/reproducible-reports-with-quarto.html",
    "title": "Reproducible reports with Quarto",
    "section": "",
    "text": "This workshop introduces you to Quarto (Allaire et al. 2024) for creating reproducible reports.\nüé¨ An instruction to do something\n\nThe successful student will be able to:\n\nexplain what Quarto and markdown are\nappreciate the role of the YAML header\nset default code chunk behaviour and that for individual chunks\nuse headings, simple text formatting and special characters\nadd citations and references\nuse inline code to report results in text\ncreate automatically numbered tables and figures and cross reference them in text\n\n\n\nTypically people analyse, plot and write up in different programs.\n90% use Word/Pages/Writer/Googledocs\n\nUpdates to data require manual updates to all the figures and tables as well as to text reporting results.\nGraphs are saved to files and inserted into the final report.\nReordering figures, tables and equations means updating everywhere they are cross-referenced.\nSubmitting to a different journal requires reformatting the document.\nManual labour ‚Ä¶.. error prone\n\n\nAn open-source scientific and technical publishing system that allows you to create dynamic reproducible reports in a variety of output formats.\n\nNext generation RMarkdown. Many new features, greater standardisation and more flexibility.\n\nMarkdown is a lightweight markup language for creating formatted text using a plain-text editor. It was designed by John Gruber in 2004\nRMarkdown is an extension of Markdown that adds support for embedding R code chunks in Markdown documents. It was created by JJ Allaire and Yihui Xie early in 2014 but has been worked on by many others since.\n\n\nMutli-language: Python, R, Julia, and Observable.\nInclude auto-numbered and cross-referencable equations, figures and tables\nIntegrates with Zotero"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#learning-outcomes",
    "href": "materials/reproducible-reports-with-quarto.html#learning-outcomes",
    "title": "Reproducible reports with Quarto",
    "section": "",
    "text": "The successful student will be able to:\n\nexplain what Quarto and markdown are\nappreciate the role of the YAML header\nset default code chunk behaviour and that for individual chunks\nuse headings, simple text formatting and special characters\nadd citations and references\nuse inline code to report results in text\ncreate automatically numbered tables and figures and cross reference them in text"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#current-process",
    "href": "materials/reproducible-reports-with-quarto.html#current-process",
    "title": "Reproducible reports with Quarto",
    "section": "",
    "text": "Typically people analyse, plot and write up in different programs.\n90% use Word/Pages/Writer/Googledocs\n\nUpdates to data require manual updates to all the figures and tables as well as to text reporting results.\nGraphs are saved to files and inserted into the final report.\nReordering figures, tables and equations means updating everywhere they are cross-referenced.\nSubmitting to a different journal requires reformatting the document.\nManual labour ‚Ä¶.. error prone"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#what-is-quarto",
    "href": "materials/reproducible-reports-with-quarto.html#what-is-quarto",
    "title": "Reproducible reports with Quarto",
    "section": "",
    "text": "An open-source scientific and technical publishing system that allows you to create dynamic reproducible reports in a variety of output formats.\n\nNext generation RMarkdown. Many new features, greater standardisation and more flexibility.\n\nMarkdown is a lightweight markup language for creating formatted text using a plain-text editor. It was designed by John Gruber in 2004\nRMarkdown is an extension of Markdown that adds support for embedding R code chunks in Markdown documents. It was created by JJ Allaire and Yihui Xie early in 2014 but has been worked on by many others since.\n\n\nMutli-language: Python, R, Julia, and Observable.\nInclude auto-numbered and cross-referencable equations, figures and tables\nIntegrates with Zotero"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#key-points-from-the-demo",
    "href": "materials/reproducible-reports-with-quarto.html#key-points-from-the-demo",
    "title": "Reproducible reports with Quarto",
    "section": "Key points from the demo",
    "text": "Key points from the demo\n\nQuarto mixes text and code to create dynamic reports\nThe YAML header sets the default behaviour for the document and is between --- at the top of the document\nR Code chunks are between ```{r} and ``` and chunk options, starting #|, determine how/whether they run whether code/output is included in the rendered document\nYou can run code chunk interactively or through rendering\nComments: |#, # in code chunks, &lt;!-- in text --&gt; but use Ctrl+Shift+C"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#text-formatting",
    "href": "materials/reproducible-reports-with-quarto.html#text-formatting",
    "title": "Reproducible reports with Quarto",
    "section": "Text Formatting",
    "text": "Text Formatting\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n*italics*,**bold**\n\nitalics, bold\n\n\n\n***bold italics ***\nbold italics\n\n\nsuperscript^2^\nsuperscript2\n\n\n\nsubscript~2~\nsubscript2\n\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#headings",
    "href": "materials/reproducible-reports-with-quarto.html#headings",
    "title": "Reproducible reports with Quarto",
    "section": "Headings",
    "text": "Headings\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n\nLinks & Images\n\n\nMarkdown Syntax\nOutput\n\n\n\n[Quar\nto](https://quarto.org)\nQuarto\n\n\n![Cap\ntion](images/chaff.jpg)\n\n\nCaption"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#equations",
    "href": "materials/reproducible-reports-with-quarto.html#equations",
    "title": "Reproducible reports with Quarto",
    "section": "Equations",
    "text": "Equations\nUse $ delimiters for inline maths and $$ delimiters for display maths. For example:\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\ni\nnline maths: $E = mc^{2}$\ninline maths: \\(E=mc^{2}\\)\n\n\n\ndisplay maths:\n\n$$E = mc^{2}$$\n\ndisplay maths:\n\\[E = mc^{2}\\]"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#divs",
    "href": "materials/reproducible-reports-with-quarto.html#divs",
    "title": "Reproducible reports with Quarto",
    "section": "Divs",
    "text": "Divs\n‚ÄúDivs‚Äù are used to group content together. They can be used to apply styling to that content.\nWe also use them for grouping a code chunks with text. This is useful for creating multi-panel figures with legends."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#create-a-new-project",
    "href": "materials/reproducible-reports-with-quarto.html#create-a-new-project",
    "title": "Reproducible reports with Quarto",
    "section": "Create a new project",
    "text": "Create a new project\nüé¨ File | New Project | New Directory | Quarto Project\n\nBrowse to an appropriate place and give your project a name.\nI used wr-chaff\nChoose Engine: Knitr\nTurn visual markdown editor off (for now)"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#change-some-rstudio-settings",
    "href": "materials/reproducible-reports-with-quarto.html#change-some-rstudio-settings",
    "title": "Reproducible reports with Quarto",
    "section": "Change some RStudio settings",
    "text": "Change some RStudio settings\nüé¨ Tools | Global Options\n\n\nGeneral:\n\nTurn off the three ‚ÄúRestore ‚Ä¶.‚Äù options\nTurn ‚ÄúSave workspace to .RData on exit‚Äù to Never\n\n\n\nR Markdown:\n\nTurn ‚ÄúShow output preview in:‚Äù to Viewer pane"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#your-project-contains",
    "href": "materials/reproducible-reports-with-quarto.html#your-project-contains",
    "title": "Reproducible reports with Quarto",
    "section": "Your project contains",
    "text": "Your project contains\n\nwr-chaff.RProj - what makes the folder an RStudio project\n_quarto.yml - the configuration file\nwr-chaff.md - the main document containing some template text\n\nüé¨ Hit Render (Ctrl-Shift-K)\nNote that wr-chaff.html is created and opened in the Viewer pane"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#add-some-content",
    "href": "materials/reproducible-reports-with-quarto.html#add-some-content",
    "title": "Reproducible reports with Quarto",
    "section": "Add some content",
    "text": "Add some content\nüé¨ Add a code chunk (Ctrl-Shift-I) for a simple graph.\n\n```{r}\nhist(rnorm(100))\n```\n\n\n\n\n\n\n\nüé¨ Hit Render (Ctrl-Shift-K)"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#edit-the-yaml-header-default-code-chunk-options",
    "href": "materials/reproducible-reports-with-quarto.html#edit-the-yaml-header-default-code-chunk-options",
    "title": "Reproducible reports with Quarto",
    "section": "Edit the YAML header: default code chunk options",
    "text": "Edit the YAML header: default code chunk options\nüé¨ Set some default code chunk options. I recommend these for reports\n---\ntitle: \"The difference in mass between subspecies of common chaffinch.\"\nauthor: \"Emma Rand\"\nengine: knitr\nformat:\n  html\nexecute:\n  echo: false\n  include: true\n  error: false\n  message: false\n  warning: false\n\n---\nüé¨ Hit Render (Ctrl-Shift-K)\nCode chunk options\n\n\necho: false code will not be included in output\n\ninclude: true output will be included\n\nerror: false halt render if a code error occurs\n\nmessage: false messages and warnings will not be included\nwarning: false\n\nüé¨ Experiment with change the options and re-rendering. Try misspelling rnorm to see the error option in action."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#an-introduction",
    "href": "materials/reproducible-reports-with-quarto.html#an-introduction",
    "title": "Reproducible reports with Quarto",
    "section": "An Introduction",
    "text": "An Introduction\nüé¨ Add this test to the Introduction\n\nA number of subspecies of the common chaffinch, Fringilla coelebs, have been described based principally on the differences in the pattern and colour of the adult male plumage. Two of groups of these subspecies are the ‚Äúcoelebs group‚Äù that occurs in Europe and Asia and the ‚Äúcanariensis group‚Äù that occurs on the Canary Islands.\n\nüé¨ Make the species name italic\nüé¨ Make ‚Äúcommon chaffinch‚Äù a link to https://en.wikipedia.org/wiki/Common_chaffinch"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#data-import",
    "href": "materials/reproducible-reports-with-quarto.html#data-import",
    "title": "Reproducible reports with Quarto",
    "section": "Data import",
    "text": "Data import\nüé¨ Make a folder called data-raw\nüé¨ Save chaff.txt to data-raw\nüé¨ Add a code chunk with:\n\n```{r}\n#| label: import-data\nfile &lt;- \"data-raw/chaff.txt\"\nchaff &lt;- read_table(file)\n```\n\nüé¨ Run chunks interactively\nüé¨ Render"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#data-summary",
    "href": "materials/reproducible-reports-with-quarto.html#data-summary",
    "title": "Reproducible reports with Quarto",
    "section": "Data summary",
    "text": "Data summary\nüé¨ Add a code chunk with:\n\n```{r}\n#| label: data-summary\nchaff_summary &lt;- chaff |&gt; \n  group_by(subspecies) |&gt;  \n  summarise(mean = mean(mass, na.rm = TRUE),\n            sd = sd(mass, na.rm = TRUE),\n            n = length(mass),\n            se = sd / sqrt(n))\n```\n\nüé¨ Render\nNotice the chunk labels being used in ‚ÄúBackground Jobs‚Äù"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#methods-text",
    "href": "materials/reproducible-reports-with-quarto.html#methods-text",
    "title": "Reproducible reports with Quarto",
    "section": "Methods text",
    "text": "Methods text\nüé¨ Add this text to Methods:\n\nWe randomly sampled 20 F. c.¬†coelebs males and 20 F. c.¬†palmae males and determined their mass with spring scales. Analysis was carried out with R and tidyverse packages.\n\nIt would be good not to have ‚Äúhard coded‚Äù those numbers in the text. What if we get more data. Or we just misremember or mis-type the numbers?"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#extract-summary-information-for-use-in-inline-code",
    "href": "materials/reproducible-reports-with-quarto.html#extract-summary-information-for-use-in-inline-code",
    "title": "Reproducible reports with Quarto",
    "section": "Extract summary information for use in inline code",
    "text": "Extract summary information for use in inline code\nüé¨ Add a code chunk with:\n\n```{r}\n#| label: extract-summary\n# extract values for inline reporting\n\n# sample sizes\nn_coelebs &lt;- chaff_summary |&gt; \n  filter(subspecies == \"coelebs\") |&gt; \n  pull(n)\n\nn_canariensis &lt;- chaff_summary |&gt; \n  filter(subspecies == \"canariensis\") |&gt; \n  pull(n)\n```\n\nüé¨ Replace the sample sizes in the Methods text with inline code\nüé¨ Render"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#cross-referencing-figures",
    "href": "materials/reproducible-reports-with-quarto.html#cross-referencing-figures",
    "title": "Reproducible reports with Quarto",
    "section": "Cross referencing figures",
    "text": "Cross referencing figures\nThe label of the code chunk is important when creating figures because it is used to cross reference the figure in the text. We give cross references with @ followed by the label of the code chunk.\nThat is starts with a fig- prefix also matters - this is what determines what is treated as a figure numbered in order of appearance.\nüé¨ Add a sentence with a cross reference to the figure:\n\nCanariensis have higher mass than coelebs. See @fig-chaff."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#figure-legends",
    "href": "materials/reproducible-reports-with-quarto.html#figure-legends",
    "title": "Reproducible reports with Quarto",
    "section": "Figure legends",
    "text": "Figure legends\nThere are two ways to add a legend:\n\nAdd the fig-cap chunk option: fig-cap: \"Mass of chaffinches\" to the code chunk.\nUse a div. :::\n\nDivs are more flexible:\n\nYou can include inline code, citations, special characters and formatting\nYou can more easily make multipanel figures"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#a-figure-legend-with-a-div",
    "href": "materials/reproducible-reports-with-quarto.html#a-figure-legend-with-a-div",
    "title": "Reproducible reports with Quarto",
    "section": "A figure legend with a div",
    "text": "A figure legend with a div\nüé¨ Add a div by:\n\nremoving the fig-cap option and the label option\nadding ::: before and after the code chunk\nplacing the label after the opening ::: like this: :::{#fig-chaff} Note the# is important for numbering\nPutting the legend text between the code chunk and the closing :::\n\nIn the example figure legend I have included inline code, formatting and a special character using inline math."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#set-the-figure-size-and-alignment",
    "href": "materials/reproducible-reports-with-quarto.html#set-the-figure-size-and-alignment",
    "title": "Reproducible reports with Quarto",
    "section": "Set the figure size and alignment",
    "text": "Set the figure size and alignment\nüé¨ Add a chunk options fig-width, fig-height and fig-align to the code chunk:\n\n```{r}\n#| fig-width: 3.5\n#| fig-height: 3.5\nggplot() +\n  geom_point(data = chaff, aes(x = subspecies, y = mass),\n             position = position_jitter(width = 0.1, height = 0),\n             colour = \"gray50\") +\n  geom_errorbar(data = chaff_summary, \n                aes(x = subspecies, ymin = mean - se, ymax = mean + se),\n                width = 0.3) +\n  geom_errorbar(data = chaff_summary, \n                aes(x = subspecies, ymin = mean, ymax = mean),\n                width = 0.2) +\n  scale_y_continuous(name = \"Mass (g)\", \n                     limits = c(0, 30), \n                     expand = c(0, 0)) +\n  scale_x_discrete(name = \"Subspecies\", \n                   labels = c(\"Canariensis\", \"Coelebs\")) +\n  theme_classic()\n```"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#the-panels",
    "href": "materials/reproducible-reports-with-quarto.html#the-panels",
    "title": "Reproducible reports with Quarto",
    "section": "The panels",
    "text": "The panels\nüé¨ Add these two chunks to the Results section below the last figure (make sure you‚Äôre outside the last div)\n\n```{r}\n#| label: fig-hist-canariensis\nchaff |&gt; filter(subspecies == \"canariensis\") |&gt;\n  ggplot(aes(x = mass)) +\n  geom_histogram(bins = 8) +\n  theme_minimal()\n```\n\n\n\n\n\n\nFigure¬†2\n\n\n\n\n\n```{r}\n#| label: fig-hist-coelebs\nchaff |&gt; filter(subspecies == \"coelebs\") |&gt;\n  ggplot(aes(x = mass)) +\n  geom_histogram(bins = 8) +\n  theme_minimal()\n```\n\n\n\n\n\n\nFigure¬†3\n\n\n\n\nIf you render, you‚Äôll see that the two figures are added as separate figures."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#as-one-figure",
    "href": "materials/reproducible-reports-with-quarto.html#as-one-figure",
    "title": "Reproducible reports with Quarto",
    "section": "As one figure",
    "text": "As one figure\nTo make them into one figure we need to use a div.\nüé¨ Add the div a round those chunks\n{##fig-histograms layout-ncol=2}\n\nthe two code chunks\n\n:::\nüé¨ Render\nüõù Add a figure legend to the two panel figure\nüõù Add a sentence with a cross reference to the figure. Can you cross reference the sub figures?\nüõù Change the order of the figures and marvel at the updated numbers"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#crossreferencing-tables",
    "href": "materials/reproducible-reports-with-quarto.html#crossreferencing-tables",
    "title": "Reproducible reports with Quarto",
    "section": "Crossreferencing Tables",
    "text": "Crossreferencing Tables\nJust as the fig- prefix matters for corrected numbering of figures, the tbl- prefix is important for the corrected numbering of figures.\nJust as the label of the code chunk is important for cross referencing of figures so it is for tables and we use @ followed by the label of the code chunk to cross reference the table in the text.\nüé¨ Add a sentence with a cross reference to the table."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#tables---improve-format",
    "href": "materials/reproducible-reports-with-quarto.html#tables---improve-format",
    "title": "Reproducible reports with Quarto",
    "section": "Tables - improve format",
    "text": "Tables - improve format\nThe decimal places are over-the-top. They can be set\n\nin the table by adding digits = 2 to the kable() function\nFor the document overall by adding:\n\n\n```{r}\noptions(digits = 2)\n```\n\nüé¨ Do one of these."
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#tables---improve-format-1",
    "href": "materials/reproducible-reports-with-quarto.html#tables---improve-format-1",
    "title": "Reproducible reports with Quarto",
    "section": "Tables - improve format",
    "text": "Tables - improve format\nA handy tidyverse function, str_to_sentence(), can be used for converting lower case to sentence case. We will do this for column names\nüé¨ Add col.names = names(chaff_summary) |&gt; str_to_sentence() to the kable() function"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#package-citations",
    "href": "materials/reproducible-reports-with-quarto.html#package-citations",
    "title": "Reproducible reports with Quarto",
    "section": "Package citations",
    "text": "Package citations\nYou can add citations for R and packages, from doi, from a .bib file, or from zotero.\nüé¨ Put your cursor where you want the citation to go and click the Insert button in the top right and select Citation (Ctrl-Shift-F8) and add a citation for the tidverse package.\nüé¨ Render\n\nthe in-text citation has been added\nthe reference has been added to the references section\na references.bib file has been created in the project folder"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#citations-from-doi",
    "href": "materials/reproducible-reports-with-quarto.html#citations-from-doi",
    "title": "Reproducible reports with Quarto",
    "section": "Citations from DOI",
    "text": "Citations from DOI\nüé¨ Put your cursor after ‚Äúplumage‚Äù in the Introduction and click the Insert button in the top right and select Citation (Ctrl-Shift-F8). Select From DOI and paste in 10.1016/j.ympev.2009.07.018\nüé¨ Render\nYou can also add citations to the .bib file manually. E.g. for R itself"
  },
  {
    "objectID": "materials/reproducible-reports-with-quarto.html#extra-exercises",
    "href": "materials/reproducible-reports-with-quarto.html#extra-exercises",
    "title": "Reproducible reports with Quarto",
    "section": "Extra exercises",
    "text": "Extra exercises\nüõù Make a folder called images and save these two images of the subspecies to it: canariensis.jpg and coelebs.jpg. Then add images of each of the chaffinch subspecies as a multi-panel figure in the introduction"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "White Rose Analytics 1",
    "section": "",
    "text": "Training for first year PhD students on the White Rose Universities (York, Sheffield, Leeds) DTP in Mechanistic Biology. It is designed and delivered by Emma Rand of The University of York.\n\n\nAn increase in the complexity, and scale, of biological data means biologists are increasingly required to develop the data skills needed to design reproducible workflows for the simulation, collection, organisation, processing, analysis and presentation of data. Developing such data skills requires at least some coding, also known as scripting. This makes your work (everything you do with your raw data) explicitly described, totally transparent and completely reproducible. However, learning to code can be a daunting prospect for many biologists! That‚Äôs where an Reproducibility with R comes in!\nR is a free and open source language especially well-suited to data analysis and visualisation and has a relatively inclusive and newbie-friendly community. R caters to users who do not see themselves as programmers, but then allows them to slide gradually into programming.\nThis workshop will introduce you to R and RStudio, the most widely used interface for working with R. You will learn how to import data, manipulate it, summarise it and plot it. You will learn how to use an organised project-oriented workflow with well-commented scripts so that you can understand your work in the future and share it with others. In addition, you will learn what a working directory and a file path are - these are key concepts in computing generally but ones which are often not taught to biologists.\n\n\n\nIt is impossible to cover everything to you might ever need! Different people will use different methods and tools. Topics have been chosen because they are: foundational, widely applicable and transferable conceptually.\n\n\n\nAfter this workshop the successful learner will be able to:\n\nFind their way around the RStudio windows\nCreate and plot data using ggplot\nExplain the rationale for scripting analysis\nKnow how to load packages\nUnderstand what is meant by the working directory, absolute and relative paths and be able to apply these concepts to data import\nSummarise data in a single group or in multiple groups\nDevelop highly organised analyses including well-commented scripts that can be understood by future you and others"
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "White Rose Analytics 1",
    "section": "",
    "text": "An increase in the complexity, and scale, of biological data means biologists are increasingly required to develop the data skills needed to design reproducible workflows for the simulation, collection, organisation, processing, analysis and presentation of data. Developing such data skills requires at least some coding, also known as scripting. This makes your work (everything you do with your raw data) explicitly described, totally transparent and completely reproducible. However, learning to code can be a daunting prospect for many biologists! That‚Äôs where an Reproducibility with R comes in!\nR is a free and open source language especially well-suited to data analysis and visualisation and has a relatively inclusive and newbie-friendly community. R caters to users who do not see themselves as programmers, but then allows them to slide gradually into programming.\nThis workshop will introduce you to R and RStudio, the most widely used interface for working with R. You will learn how to import data, manipulate it, summarise it and plot it. You will learn how to use an organised project-oriented workflow with well-commented scripts so that you can understand your work in the future and share it with others. In addition, you will learn what a working directory and a file path are - these are key concepts in computing generally but ones which are often not taught to biologists."
  },
  {
    "objectID": "index.html#philosophy-and-approach",
    "href": "index.html#philosophy-and-approach",
    "title": "White Rose Analytics 1",
    "section": "",
    "text": "It is impossible to cover everything to you might ever need! Different people will use different methods and tools. Topics have been chosen because they are: foundational, widely applicable and transferable conceptually."
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "White Rose Analytics 1",
    "section": "",
    "text": "After this workshop the successful learner will be able to:\n\nFind their way around the RStudio windows\nCreate and plot data using ggplot\nExplain the rationale for scripting analysis\nKnow how to load packages\nUnderstand what is meant by the working directory, absolute and relative paths and be able to apply these concepts to data import\nSummarise data in a single group or in multiple groups\nDevelop highly organised analyses including well-commented scripts that can be understood by future you and others"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html",
    "href": "materials/introduction-to-r-and-rstudio.html",
    "title": "Introduction to R and RStudio",
    "section": "",
    "text": "Finding your way round RStudio\nTyping in data and plotting it\nImporting data: working directories and paths"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#rstudio-live-demonstration",
    "href": "materials/introduction-to-r-and-rstudio.html#rstudio-live-demonstration",
    "title": "Introduction to R and RStudio",
    "section": "RStudio: live demonstration",
    "text": "RStudio: live demonstration\n\nthe panels\n\nTop left: Script - write and edit code and comments to keep\nBottom left: Console - where commands get executed and can be typed\nTop right: Environment - where you can see the objects you have created; History - of commands\nBottom right: Files - a file explorer; Plots; Packages; Help\n\n\n\nmaking yourself comfortable\ntyping in the console sending commands\nusing R as a calculator\nassigning values\nwhere to see objects\nusing a script - make sure to execute\ncomments #\ndata types and structures\nfunctions c()\n\ntypes of R files: .R, .RData .RHistory"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#overview-of-demonstration",
    "href": "materials/introduction-to-r-and-rstudio.html#overview-of-demonstration",
    "title": "Introduction to R and RStudio",
    "section": "Overview of demonstration",
    "text": "Overview of demonstration\nThere are several ways you can recap the demo at a later date:\nüñºÔ∏è Refer to this infographic Larger format \nüìñ Read First Steps in RStudio\nüìπ Watch"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#the-goal-plot",
    "href": "materials/introduction-to-r-and-rstudio.html#the-goal-plot",
    "title": "Introduction to R and RStudio",
    "section": "The goal üêà plot",
    "text": "The goal üêà plot\nWe will work with some data on the coat colour of 62 cats. You are going to type data in R, summarise and plot it\nThe data are as a frequency table:\n\n\n\nFrequency of coat colours in 62 cats\n\nCoat colour\nNo. cats\n\n\n\nblack\n23\n\n\nwhite\n15\n\n\ntabby\n8\n\n\nginger\n10\n\n\ntortoiseshell\n5\n\n\ncalico\n1\n\n\n\n\n\nYou will create a figure like this:"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#getting-set-up",
    "href": "materials/introduction-to-r-and-rstudio.html#getting-set-up",
    "title": "Introduction to R and RStudio",
    "section": "Getting set up",
    "text": "Getting set up\n\nüé¨ In RStudio do File | New project | New directory Be purposeful about where you create it and name it. I suggest cats-1\nüé¨ Make a new script and save it as type-data-and-plot.R to carry out the rest of the work."
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#creating-the-data",
    "href": "materials/introduction-to-r-and-rstudio.html#creating-the-data",
    "title": "Introduction to R and RStudio",
    "section": "Creating the data",
    "text": "Creating the data\nStart by making a vector called coat that holds coat colours\nüé¨ Write the following in your script:\n\n# coat colours\ncoat &lt;- c(\"black\", \"white\", \"tabby\", \"ginger\", \"tortoiseshell\", \"calico\")\n\nThe shortcut for &lt;- is Alt+- (hold the Alt key down then hit the minus key ).\nEnsure your cursor is on the line with the command and do Control+Enter to send the command to the console to be executed.\nI have used a comment. Comment your code as much as possible!\nüõù Create a vector called freq containing the numbers of cats with each coat colour\n\nAnswer - don‚Äôt look until you have tried!# numbers of cats with each coat colour\nfreq &lt;- c(23, 15, 8, 10, 5, 1)"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#packages",
    "href": "materials/introduction-to-r-and-rstudio.html#packages",
    "title": "Introduction to R and RStudio",
    "section": "Packages",
    "text": "Packages\nCommands like c() and sum() are in packages which are part the ‚Äòbase‚Äô R system. A package is a collection of related commands. Base packages are installed automatically when you install R.\nOther packages, such as ggplot2 (Wickham 2016) need to be installed once, and then loaded each session. ggplot2 is one of the tidyverse (Wickham et al. 2019) packages.\nüé¨ Load the tidyverse:\n\nlibrary(tidyverse)\n\nYou will likely be warned of some function name conflicts but these will not be a problem for you."
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#plotting-the-data-with-ggplot",
    "href": "materials/introduction-to-r-and-rstudio.html#plotting-the-data-with-ggplot",
    "title": "Introduction to R and RStudio",
    "section": "Plotting the data with ggplot()\n",
    "text": "Plotting the data with ggplot()\n\n\n\nggplot() takes a dataframe for an argument\nWe can make a dataframe of the two vectors, coat and freq using the data.frame() function.\n\nüé¨ Make a dataframe called coat_data\n\ncoat_data &lt;- data.frame(coat, freq)\n\nüé¨ Click on coat_data in the Environment to open a spreadsheet-like view of it.\nüé¨ Create a simple barplot using ggplot like this:\n\nggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col()\n\n\n\n\n\n\n\n\n\nggplot() alone creates a blank plot.\n\nggplot(data = coat_data) looks the same.\n\naes() gives the ‚ÄòAesthetic mappings‚Äô. How variables (columns) are mapped to visual properties (aesthetics) e.g., axes, colour, shapes.\nThus ggplot(data = coat_data, aes(x = coat, y = freq)) produces a plot with axes\n\ngeom_col: A ‚ÄòGeom‚Äô (Geometric object) gives the visual representations of the data: points, lines, bars, boxplots etc.\n\nNote that ggplot2 is the name of the package and ggplot() is its most important command."
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#using-the-help-manual",
    "href": "materials/introduction-to-r-and-rstudio.html#using-the-help-manual",
    "title": "Introduction to R and RStudio",
    "section": "Using the help manual",
    "text": "Using the help manual\nThe manual tells us about a function. ‚ÄòArguments‚Äô can be added to the geom_col() command inside the brackets.\nCommands do something and their arguments (in brackets) and can specify:\n\nwhat object to do it to\nhow exactly to do it\n\nMany arguments have defaults so you don‚Äôt always need to supply them.\nüé¨ Open the manual page for geom_col() using:\n\n?geom_col\n\nThe manual page has several sections.\n\n\nDescription an overview of what the command does\n\nUsage lists arguments\n\nform: argument name = default value\nsome arguments MUST be supplied others have defaults\n\n... means etc and includes arguments that can be passed to many ‚Äògeoms‚Äô\n\n\n\nArguments gives the detail about the arguments\n\nDetails describes how the command works in more detail\n\nValue gives the output of the command\nDon‚Äôt be too perturbed by not fully understanding the information"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#customising-a-plot",
    "href": "materials/introduction-to-r-and-rstudio.html#customising-a-plot",
    "title": "Introduction to R and RStudio",
    "section": "Customising a plot",
    "text": "Customising a plot\nBar colour\nüé¨ Change the fill of the bars using fill:\n\nggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col(fill = \"lightblue\")\n\n\n\n\n\n\n\nColours can be given by their name, ‚Äúlightblue‚Äù or code, ‚Äú#ADD8E6‚Äù.\nLook up by name or code\nüé¨ Change the bars to a colour you like.\nfill is one of the arguments covered by .... fill is an ‚Äòaesthetic‚Äô. If you look for ... in the list of arguments you will see it says:\n\nOther arguments passed on to layer(). These are often aesthetics, used to set an aesthetic to a fixed value, like colour = ‚Äúred‚Äù or size = 3. They may also be parameters to the paired geom/stat.\n\nWe just set the fill aesthetic to a fixed value.\nFurther down the manual, there is a section on Aesthetics which lists those understood by geom_col()\nWe can set (map) the fill aesthetic to a fixed colour inside geom_col() or map it to a variable from the dataframe inside the aes() instead. This means the colour will be different for different values in that variable.\nüé¨ Map the fill aesthetic to the coat variable:\n\nggplot(data = coat_data, aes(x = coat, y = freq, fill = coat)) +\n  geom_col()\n\n\n\n\n\n\n\nNote that we have taken fill = \"lightblue\" out of the geom_col() and instead put fill = coat in the aes().\nüõù Use the manual to put the bars next to each other. Look for the argument that will mean there is no space between the bars.\n\nAnswer - don‚Äôt look until you have tried!ggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col(fill = \"lightblue\", width = 1)\n\n\n\n\n\n\n\nüõù Use the manual to change the colour of the lines around each bar to black.\n\nAnswer - don‚Äôt look until you have tried!ggplot(data = coat_data,\n       aes(x = coat, y = freq)) +\n  geom_col(fill = \"lightblue\", \n           width = 1, \n           colour = \"black\")\n\n\n\n\n\n\n\nChanging the axes\nWe can make changes to the axes using:\n\nChanges to a discrete x axis: scale_x_discrete()\n\nChanges to a continuous y axis: scale_y_continuous()\n\n\nggplot automatically extends the axes slightly. You can turn this behaviour off with the expand argument in scale_x_discrete() and scale_y_continuous().1\nüé¨ To remove the gap between the axes and the data:\n\nggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col(fill = \"lightblue\", \n           width = 1, \n           colour = \"black\") +\n  scale_x_discrete(expand = c(0, 0)) + \n  scale_y_continuous(expand = c(0, 0)) \n\n\n\n\n\n\n\nEach ‚Äòlayer‚Äô is added to the ggplot() command with a +\n\n\n\n\n\n\nTop Tip\n\n\n\nMake your code easier to read by using white space and new lines\n\nput spaces around = , -&gt; and after ,\n\nuse a newline after every comma in a command with lots of arguments\n\n\n\nüõù Look up scale_x_discrete in the manual and work out how to change the axis title from ‚Äúcoat‚Äù to ‚ÄúCoat colour‚Äù. Also change the y-axis title.\n\nAnswer - don‚Äôt look until you have tried!ggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col(fill = \"lightblue\", \n           width = 1, \n           colour = \"black\") +\n  scale_x_discrete(expand = c(0, 0),\n                   name = \"Coat colour\") + \n  scale_y_continuous(expand = c(0, 0),\n                     name = \"Number of cats\") \n\n\n\n\n\n\n\nüé¨ I would prefer to see the y-axis extend a little beyond the data and we can change the axis ‚Äúlimits‚Äù in the scale_y_continuous()\n\nggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col(fill = \"lightblue\", \n           width = 1, \n           colour = \"black\") +\n  scale_x_discrete(expand = c(0, 0),\n                   name = \"Coat colour\") + \n  scale_y_continuous(expand = c(0, 0),\n                     name = \"Number of cats\",\n                     limits = c(0, 25)) \n\n\n\n\n\n\n\nGetting rid of the grey background\nThe grey grid background is useful for examining plots on a screen but for a report or publication you will want a more scientific style. Every aspect of the ‚Äútheme‚Äù of a plot - the non-data elements such as fonts, background colours, axis line colours etc - can be controlled individually2 but there are some handy built in themes that apply several changes at once. One of these is theme_classic()\nüé¨ Add theme_classic() to the plot:\n\nggplot(data = coat_data, aes(x = coat, y = freq)) +\n  geom_col(width = 1, \n           colour = \"black\",\n           fill = \"lightblue\") +\n  scale_x_discrete(expand = c(0, 0),\n                   name = \"Coat colour\") + \n  scale_y_continuous(expand = c(0, 0),\n                     name = \"Number of cats\",\n                     limits = c(0, 25)) +\n  theme_classic()"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#the-goal",
    "href": "materials/introduction-to-r-and-rstudio.html#the-goal",
    "title": "Introduction to R and RStudio",
    "section": "The goal",
    "text": "The goal"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#getting-set-up-1",
    "href": "materials/introduction-to-r-and-rstudio.html#getting-set-up-1",
    "title": "Introduction to R and RStudio",
    "section": "Getting set up",
    "text": "Getting set up\n\nüé¨ In RStudio do File | New project | New directory Be purposeful about where you create it and name it. I suggest cats-2\nüé¨ Make a new script and save it as import-data-and-summarise-plot.R.\nüé¨ Save this file to your cats-2 folder: The coat colour and mass of 62 cats - cat-coats.csv"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#learning-about-working-directories-and-paths",
    "href": "materials/introduction-to-r-and-rstudio.html#learning-about-working-directories-and-paths",
    "title": "Introduction to R and RStudio",
    "section": "Learning about working directories and paths",
    "text": "Learning about working directories and paths\nReading in data from the Project folder cats-2\n\nCSV files can be read read in with core tidyverse (Wickham et al. 2019) functions.\nüé¨ Load the packages\n\nlibrary(tidyverse)\n\nA .csv. extension suggests this is plain text file with comma separated columns. However, before we attempt to read it it, we should take a look at it. We can do this from RStudio\nüé¨ Go to the Files pane (bottom right), click on the cat-coats.csv file and choose View File4\nüé¨ Read in the csv file with:\n\ncats &lt;- read_csv(\"cat-coats.csv\")\n\nThe data from the file will be read into a dataframe called cats and you will be able to see it in the Environment.\nReading in data from a different folder\nTo help you understand relative file paths, we will now move the data file.\nüé¨ First remove the dataframes you just created to make it easier to see whether you can successfully read in the files from a different place:\n\nrm(cats)\n\nüé¨ Now make a new folder called data-raw. You can do this on the Files Pane by clicking New Folder and typing into the box that appears.\nüé¨ Check the boxes next to the file names and choose More | Move‚Ä¶ and select the data-raw folder.\nThe file will move. To import data from a file in the data-raw folder, you need to give the relative path to the file from the working directory. The working directory is the Project folder, cats-2 so the relative path is data-raw/cat-coats.csv\nüé¨ Import the cat-coats.csv data like this:\n\ncats &lt;- read_csv(\"data-raw/cat-coats.csv\")"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#creating-a-boxplot",
    "href": "materials/introduction-to-r-and-rstudio.html#creating-a-boxplot",
    "title": "Introduction to R and RStudio",
    "section": "Creating a boxplot",
    "text": "Creating a boxplot\nüé¨ Create a simple barplot using ggplot like this:\n\nggplot(data = cats, aes(x = coat, y = mass)) +\n  geom_boxplot()\n\n\n\n\n\n\n\nüõù Can you format the boxplot as shown above?\n\nAnswer - don‚Äôt look until you have tried!ggplot(data = cats, aes(x = coat, y = mass)) +\n  geom_boxplot() +\n  scale_y_continuous(name = \"Mass (g)\", \n                     limits = c(0, 10), \n                     expand = c(0, 0)) +\n  scale_x_discrete(name = \"Coat colour\") +\n  theme_classic()"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#rstudio-interface",
    "href": "materials/introduction-to-r-and-rstudio.html#rstudio-interface",
    "title": "Introduction to R and RStudio",
    "section": "üîß RStudio Interface",
    "text": "üîß RStudio Interface\n\nScript ‚Äì Write and save your code (.R or .qmd files)\nConsole ‚Äì Run commands and see immediate output\nEnvironment ‚Äì Lists your objects and data\nFiles / Plots / Help ‚Äì Manage files, view plots, read help docs"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#core-ideas",
    "href": "materials/introduction-to-r-and-rstudio.html#core-ideas",
    "title": "Introduction to R and RStudio",
    "section": "üß† Core ideas",
    "text": "üß† Core ideas\n\nAssignment ‚Äì Use &lt;- to store values: x &lt;- 5\nVectors ‚Äì One-dimensional data: c(1, 2, 3)\n\nData frames ‚Äì Table-like structures: data.frame(name = c(\"A\", \"B\")) but made when data is imported\npackages are loaded with library()\n\nUse RStudio Projects and paths relative to the project folder so your code is reproducible and portable"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#plotting",
    "href": "materials/introduction-to-r-and-rstudio.html#plotting",
    "title": "Introduction to R and RStudio",
    "section": "üìä Plotting",
    "text": "üìä Plotting\n\nStructure ‚Äì ggplot(data, aes(x, y)) + geom_*()\n\nCommon geoms ‚Äì geom_col(), geom_boxplot(), geom_point()\n\nCustomize ‚Äì fill, color, width, theme_classic()\n\nScales ‚Äì Adjust axes with scale_*_continuous() or scale_*_discrete()\n\n\nPages made with R (R Core Team 2025), Quarto (Allaire et al. 2024), knitr (Xie 2024, 2015, 2014), kableExtra (Zhu 2024)"
  },
  {
    "objectID": "materials/introduction-to-r-and-rstudio.html#footnotes",
    "href": "materials/introduction-to-r-and-rstudio.html#footnotes",
    "title": "Introduction to R and RStudio",
    "section": "Footnotes",
    "text": "Footnotes\n\nThere are also scale_x_continous() and scale_y_discrete() functions when you have those types of variable‚Ü©Ô∏é\nModify components of a theme‚Ü©Ô∏é\nPlain text files can be opened in notepad or other similar editor and still be readable.‚Ü©Ô∏é\nDo not be tempted to import data this way. Unless you are careful, your data import will not be scripted or will not be scripted correctly.‚Ü©Ô∏é"
  },
  {
    "objectID": "materials/data-manipulation.html",
    "href": "materials/data-manipulation.html",
    "title": "Data manipulation",
    "section": "",
    "text": "Summarising data\n\nWhole column\nBy groups in another column\n\n\nFiltering rows\nAdding columns\nWriting data to a file"
  },
  {
    "objectID": "materials/data-manipulation.html#whole-column",
    "href": "materials/data-manipulation.html#whole-column",
    "title": "Data manipulation",
    "section": "Whole column",
    "text": "Whole column\nWe can use summarise() to get summary statistics for a whole column.\nüé¨ Find the mean with:\n\ncats |&gt; \n  summarise(mean(mass))\n\n# A tibble: 1 √ó 1\n  `mean(mass)`\n         &lt;dbl&gt;\n1         4.51\n\n\nThe result is a dataframe (not a vector). This is one of the very useful features of dplyr and the tidyverse. Dataframes are the main data structure in R, and most functions in the tidyverse return dataframes. This makes it easy to chain together multiple operations using the pipe operator (|&gt;).\nBy default the name of the column is the function name. This is not very informative, so we can give it a more meaningful name.\nNaming the column\nTo name the column, we can use the name = argument in the summarise() function.\nüé¨ Give a name to the new column containing the mean:\n\ncats |&gt; \n  summarise(mean = mean(mass))\n\n# A tibble: 1 √ó 1\n   mean\n  &lt;dbl&gt;\n1  4.51\n\n\nAnother useful feature of dataframe outputs is that it is easy to add more columns.\nAdding other summary stats\nTo add additional summary statistics, we can just add more arguments to the summarise() function. These are separated by commas.\nüé¨ Find the mean, standard deviation and sample size:\n\ncats |&gt;\n  summarise(mean = mean(mass),\n            sd = sd(mass),\n            n = length(mass))\n\n# A tibble: 1 √ó 3\n   mean    sd     n\n  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1  4.51  1.20    62\n\n\nThere is no function in R for the standard error of the mean, but we can calculate it from the standard deviation and sample size. The formula is:\nüõù Add a column for the standard error which is given by \\(\\frac{s.d.}{\\sqrt{n}}\\). The function for the square root is sqrt().\n\nAnswer - don‚Äôt look until you have tried!cats |&gt; \n  summarise(mean = mean(mass),\n            sd = sd(mass),\n            n = length(mass),\n            se = sd / sqrt(n))\n\n# A tibble: 1 √ó 4\n   mean    sd     n    se\n  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n1  4.51  1.20    62 0.152\n\n\nSo far we have only summarised the whole column. We can also summarise by groups in another column."
  },
  {
    "objectID": "materials/data-manipulation.html#by-groups-given-in-another-column",
    "href": "materials/data-manipulation.html#by-groups-given-in-another-column",
    "title": "Data manipulation",
    "section": "By groups given in another column",
    "text": "By groups given in another column\nThe pipe operator (|&gt;) is a great way to chain together multiple operations. We can use it to group the data by a column and then summarise it.\nüé¨ Find the mean, standard deviation, sample size and standard error for each coat colour:\n\ncats |&gt; \n  group_by(coat) |&gt; \n  summarise(mean = mean(mass),\n            sd = sd(mass),\n            n = length(mass),\n            se = sd / sqrt(n))\n\n# A tibble: 6 √ó 5\n  coat           mean     sd     n     se\n  &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;  &lt;dbl&gt;\n1 black          4.63  1.33     23  0.278\n2 calico         2.19 NA         1 NA    \n3 ginger         4.46  1.12     10  0.353\n4 tabby          4.86  0.444     8  0.157\n5 tortoiseshell  4.50  0.929     5  0.416\n6 white          4.34  1.34     15  0.345"
  },
  {
    "objectID": "materials/data-manipulation.html#save-the-results-with-assignment",
    "href": "materials/data-manipulation.html#save-the-results-with-assignment",
    "title": "Data manipulation",
    "section": "Save the results with assignment",
    "text": "Save the results with assignment\nWe can save the results of the summarise operation to a new dataframe using the assignment operator (&lt;-). This is useful if we want to use the results later.\nüé¨ Assign the summarised data to a new dataframe called cats_summary:\n\ncats_summary &lt;- cats |&gt; \n  group_by(coat) |&gt; \n  summarise(mean = mean(mass),\n            sd = sd(mass),\n            n = length(mass),\n            se = sd / sqrt(n))"
  },
  {
    "objectID": "materials/data-manipulation.html#filter-to-only-the-black-cats",
    "href": "materials/data-manipulation.html#filter-to-only-the-black-cats",
    "title": "Data manipulation",
    "section": "Filter to only the black cats",
    "text": "Filter to only the black cats\nüé¨ Filter to only the black cats\n\ncats_black &lt;- cats |&gt; \n  filter(coat == \"black\")\n\nüé¨ Or only the not black cats:\n\ncats |&gt; \n  filter(coat != \"black\")\n\n# A tibble: 39 √ó 2\n   coat           mass\n   &lt;chr&gt;         &lt;dbl&gt;\n 1 white          2.8 \n 2 tabby          4.96\n 3 tortoiseshell  5.86\n 4 white          4.3 \n 5 tabby          4.92\n 6 white          3.23\n 7 white          6.53\n 8 tortoiseshell  3.53\n 9 tortoiseshell  4.52\n10 ginger         5.18\n# ‚Ñπ 29 more rows\n\n\n! is the NOT operator. It negates whatever comes next. So coat != \"black\" returns all rows where the coat is not black."
  },
  {
    "objectID": "materials/data-manipulation.html#piping-is-great",
    "href": "materials/data-manipulation.html#piping-is-great",
    "title": "Data manipulation",
    "section": "Piping is great",
    "text": "Piping is great\nWe can use the pipe operator to chain together multiple operations. For example, we can filter the data and then summarise it in one step. This means we don‚Äôt have to create a new dataframe for the filtered data. For exploratory analysis, this is often the best approach to avoid clutter.\nüé¨ Summarise the black cats:\n\ncats |&gt; \n  filter(coat == \"black\") |&gt; \n  summarise(mean = mean(mass),\n            n = length(mass))\n\n# A tibble: 1 √ó 2\n   mean     n\n  &lt;dbl&gt; &lt;int&gt;\n1  4.63    23"
  },
  {
    "objectID": "materials/data-manipulation.html#filtering-on-more-than-one-condition",
    "href": "materials/data-manipulation.html#filtering-on-more-than-one-condition",
    "title": "Data manipulation",
    "section": "Filtering on more than one condition",
    "text": "Filtering on more than one condition\n\ncats |&gt; \n  filter(mass &gt; 6,\n         coat == \"ginger\")\n\n# A tibble: 2 √ó 2\n  coat    mass\n  &lt;chr&gt;  &lt;dbl&gt;\n1 ginger  6.37\n2 ginger  6.09"
  },
  {
    "objectID": "materials/data-manipulation.html#filter-the-raw-data-to-remove-calico",
    "href": "materials/data-manipulation.html#filter-the-raw-data-to-remove-calico",
    "title": "Data manipulation",
    "section": "filter the raw data to remove calico",
    "text": "filter the raw data to remove calico\n\ncats |&gt; \n  filter(coat != \"calico\")\n\n# A tibble: 61 √ó 2\n   coat           mass\n   &lt;chr&gt;         &lt;dbl&gt;\n 1 white          2.8 \n 2 tabby          4.96\n 3 tortoiseshell  5.86\n 4 black          5.74\n 5 white          4.3 \n 6 tabby          4.92\n 7 black          6.23\n 8 white          3.23\n 9 black          5.91\n10 black          5.25\n# ‚Ñπ 51 more rows\n\n\n\ncats_summary |&gt; \n  filter(coat != \"calico\")\n\n# A tibble: 5 √ó 5\n  coat           mean    sd     n    se\n  &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n1 black          4.63 1.33     23 0.278\n2 ginger         4.46 1.12     10 0.353\n3 tabby          4.86 0.444     8 0.157\n4 tortoiseshell  4.50 0.929     5 0.416\n5 white          4.34 1.34     15 0.345\n\n\n\ncats_summary |&gt; \n  filter(!is.na(sd))\n\n# A tibble: 5 √ó 5\n  coat           mean    sd     n    se\n  &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n1 black          4.63 1.33     23 0.278\n2 ginger         4.46 1.12     10 0.353\n3 tabby          4.86 0.444     8 0.157\n4 tortoiseshell  4.50 0.929     5 0.416\n5 white          4.34 1.34     15 0.345\n\n\n\ncats_summary |&gt; \n  drop_na(sd)\n\n# A tibble: 5 √ó 5\n  coat           mean    sd     n    se\n  &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n1 black          4.63 1.33     23 0.278\n2 ginger         4.46 1.12     10 0.353\n3 tabby          4.86 0.444     8 0.157\n4 tortoiseshell  4.50 0.929     5 0.416\n5 white          4.34 1.34     15 0.345"
  },
  {
    "objectID": "materials/data-manipulation.html#adding-columns",
    "href": "materials/data-manipulation.html#adding-columns",
    "title": "Data manipulation",
    "section": "Adding columns",
    "text": "Adding columns\n\ncats &lt;- cats |&gt; \n  mutate(mass_g = mass * 1000)\n\n\ncats &lt;- cats |&gt; \n  mutate(is_ginger_chonk = mass &gt; 6 & coat == \"ginger\")\n\n\ncats &lt;- cats |&gt; \n  mutate(size = case_when(mass &lt; 3.5 ~ \"small\",\n                          mass &gt; 5 ~ \"large\",\n                          .default = \"medium\"  ))\n\n\ncats &lt;- cats |&gt; \n  mutate(size2 = case_when(\n    mass &lt; 3.5 ~ \"small\",\n    mass &gt;= 3.5 & mass &lt;= 5 ~ \"medium\",\n    mass &gt; 5 ~ \"large\"))"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Introduction and Principles of reproducibility 20 mins\n\nIntroduction\nPrinciples of reproducibility\n\nIntroduction to R and RStudio 70 mins\n\nFinding your way round RStudio\nTyping in data and plotting it\nImporting data\nWorking directories and file paths"
  },
  {
    "objectID": "schedule.html#am-11am-session-1-90-mins",
    "href": "schedule.html#am-11am-session-1-90-mins",
    "title": "Schedule",
    "section": "",
    "text": "Introduction and Principles of reproducibility 20 mins\n\nIntroduction\nPrinciples of reproducibility\n\nIntroduction to R and RStudio 70 mins\n\nFinding your way round RStudio\nTyping in data and plotting it\nImporting data\nWorking directories and file paths"
  },
  {
    "objectID": "schedule.html#am-11.30am-break",
    "href": "schedule.html#am-11.30am-break",
    "title": "Schedule",
    "section": "11am ‚Äì 11.30am: break",
    "text": "11am ‚Äì 11.30am: break"
  },
  {
    "objectID": "schedule.html#am-12.15pm-session-2-45-mins",
    "href": "schedule.html#am-12.15pm-session-2-45-mins",
    "title": "Schedule",
    "section": "11.30am ‚Äì 12.15pm: Session 2 45 mins",
    "text": "11.30am ‚Äì 12.15pm: Session 2 45 mins\nData manipulation\n\nFiltering rows 1\nAdding columns\nSummarising\nWriting data to a file"
  },
  {
    "objectID": "schedule.html#pm-1pm-lunch",
    "href": "schedule.html#pm-1pm-lunch",
    "title": "Schedule",
    "section": "12.15pm ‚Äì 1pm: lunch",
    "text": "12.15pm ‚Äì 1pm: lunch"
  },
  {
    "objectID": "schedule.html#pm-2.30pm-session-3-90-mins",
    "href": "schedule.html#pm-2.30pm-session-3-90-mins",
    "title": "Schedule",
    "section": "1pm ‚Äì 2.30pm: Session 3 90 mins",
    "text": "1pm ‚Äì 2.30pm: Session 3 90 mins\nReproducible reports with Quarto 90 mins"
  }
]